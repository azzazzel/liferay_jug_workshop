/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package bg.jug.workshop.liferay.cfp.service.base;

import bg.jug.workshop.liferay.cfp.model.Event;
import bg.jug.workshop.liferay.cfp.service.EventService;
import bg.jug.workshop.liferay.cfp.service.persistence.EventPersistence;
import bg.jug.workshop.liferay.cfp.service.persistence.TalkPersistence;
import bg.jug.workshop.liferay.cfp.service.persistence.VenuePersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the event remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link bg.jug.workshop.liferay.cfp.service.impl.EventServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see bg.jug.workshop.liferay.cfp.service.impl.EventServiceImpl
 * @see bg.jug.workshop.liferay.cfp.service.EventServiceUtil
 * @generated
 */
public abstract class EventServiceBaseImpl extends BaseServiceImpl
	implements EventService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link bg.jug.workshop.liferay.cfp.service.EventServiceUtil} to access the event remote service.
	 */

	/**
	 * Returns the event local service.
	 *
	 * @return the event local service
	 */
	public bg.jug.workshop.liferay.cfp.service.EventLocalService getEventLocalService() {
		return eventLocalService;
	}

	/**
	 * Sets the event local service.
	 *
	 * @param eventLocalService the event local service
	 */
	public void setEventLocalService(
		bg.jug.workshop.liferay.cfp.service.EventLocalService eventLocalService) {
		this.eventLocalService = eventLocalService;
	}

	/**
	 * Returns the event remote service.
	 *
	 * @return the event remote service
	 */
	public EventService getEventService() {
		return eventService;
	}

	/**
	 * Sets the event remote service.
	 *
	 * @param eventService the event remote service
	 */
	public void setEventService(EventService eventService) {
		this.eventService = eventService;
	}

	/**
	 * Returns the event persistence.
	 *
	 * @return the event persistence
	 */
	public EventPersistence getEventPersistence() {
		return eventPersistence;
	}

	/**
	 * Sets the event persistence.
	 *
	 * @param eventPersistence the event persistence
	 */
	public void setEventPersistence(EventPersistence eventPersistence) {
		this.eventPersistence = eventPersistence;
	}

	/**
	 * Returns the talk local service.
	 *
	 * @return the talk local service
	 */
	public bg.jug.workshop.liferay.cfp.service.TalkLocalService getTalkLocalService() {
		return talkLocalService;
	}

	/**
	 * Sets the talk local service.
	 *
	 * @param talkLocalService the talk local service
	 */
	public void setTalkLocalService(
		bg.jug.workshop.liferay.cfp.service.TalkLocalService talkLocalService) {
		this.talkLocalService = talkLocalService;
	}

	/**
	 * Returns the talk remote service.
	 *
	 * @return the talk remote service
	 */
	public bg.jug.workshop.liferay.cfp.service.TalkService getTalkService() {
		return talkService;
	}

	/**
	 * Sets the talk remote service.
	 *
	 * @param talkService the talk remote service
	 */
	public void setTalkService(
		bg.jug.workshop.liferay.cfp.service.TalkService talkService) {
		this.talkService = talkService;
	}

	/**
	 * Returns the talk persistence.
	 *
	 * @return the talk persistence
	 */
	public TalkPersistence getTalkPersistence() {
		return talkPersistence;
	}

	/**
	 * Sets the talk persistence.
	 *
	 * @param talkPersistence the talk persistence
	 */
	public void setTalkPersistence(TalkPersistence talkPersistence) {
		this.talkPersistence = talkPersistence;
	}

	/**
	 * Returns the venue local service.
	 *
	 * @return the venue local service
	 */
	public bg.jug.workshop.liferay.cfp.service.VenueLocalService getVenueLocalService() {
		return venueLocalService;
	}

	/**
	 * Sets the venue local service.
	 *
	 * @param venueLocalService the venue local service
	 */
	public void setVenueLocalService(
		bg.jug.workshop.liferay.cfp.service.VenueLocalService venueLocalService) {
		this.venueLocalService = venueLocalService;
	}

	/**
	 * Returns the venue remote service.
	 *
	 * @return the venue remote service
	 */
	public bg.jug.workshop.liferay.cfp.service.VenueService getVenueService() {
		return venueService;
	}

	/**
	 * Sets the venue remote service.
	 *
	 * @param venueService the venue remote service
	 */
	public void setVenueService(
		bg.jug.workshop.liferay.cfp.service.VenueService venueService) {
		this.venueService = venueService;
	}

	/**
	 * Returns the venue persistence.
	 *
	 * @return the venue persistence
	 */
	public VenuePersistence getVenuePersistence() {
		return venuePersistence;
	}

	/**
	 * Sets the venue persistence.
	 *
	 * @param venuePersistence the venue persistence
	 */
	public void setVenuePersistence(VenuePersistence venuePersistence) {
		this.venuePersistence = venuePersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return EventService.class.getName();
	}

	protected Class<?> getModelClass() {
		return Event.class;
	}

	protected String getModelClassName() {
		return Event.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = eventPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = bg.jug.workshop.liferay.cfp.service.EventLocalService.class)
	protected bg.jug.workshop.liferay.cfp.service.EventLocalService eventLocalService;
	@BeanReference(type = EventService.class)
	protected EventService eventService;
	@BeanReference(type = EventPersistence.class)
	protected EventPersistence eventPersistence;
	@BeanReference(type = bg.jug.workshop.liferay.cfp.service.TalkLocalService.class)
	protected bg.jug.workshop.liferay.cfp.service.TalkLocalService talkLocalService;
	@BeanReference(type = bg.jug.workshop.liferay.cfp.service.TalkService.class)
	protected bg.jug.workshop.liferay.cfp.service.TalkService talkService;
	@BeanReference(type = TalkPersistence.class)
	protected TalkPersistence talkPersistence;
	@BeanReference(type = bg.jug.workshop.liferay.cfp.service.VenueLocalService.class)
	protected bg.jug.workshop.liferay.cfp.service.VenueLocalService venueLocalService;
	@BeanReference(type = bg.jug.workshop.liferay.cfp.service.VenueService.class)
	protected bg.jug.workshop.liferay.cfp.service.VenueService venueService;
	@BeanReference(type = VenuePersistence.class)
	protected VenuePersistence venuePersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
}